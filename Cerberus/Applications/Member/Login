<?php
/*
 ============================================================================================================
 + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 + Cerberus Content Management System
 + ----------------------------------------------------------------------------------------------------------
 + - Author			 : Gary Christopher Johnson of Oildale and SouthGate In Southern California
 + - Company			 : CerberusCMS, Free and Open Source Software
 + - Company Address		 : Oildale In Southern California, United States of America
 + - Electronic Mail Address	 : CerberusCMS2@Proton.me
 + - Document Notes		 : View this file in a non-formatting text editor without word-wrap for the
 +				 : correct display of this programming code and its indentation.
 + ----------------------------------------------------------------------------------------------------------
 +    ()  ()  ()
 +  ()  ()  ()
 +  ------------------------------
 +  Application Module
 + ----------------------------------------------------------------------------------------------------------
 + - This File, Location	 : Root Directory => Applications => Member => Login
 + - This File, Version		 : 0.7.2
 + - This File, Programming Code : Pure Pre-Hyper-Text-Post-Processor
 + - Programming Code Model	 : Procedural, Functional, Object Oriented :: Pre-Order Algebraic
 + -				 :					   :: Pre-Order Logical
 + - Compatibility		 : Extensible-Markup-Language		   :: Version Numbers: 1, 1.1
 + - Compatibility		 : Hyper-Text-Markup-Language		   :: Version Numbers: 1, 2, 3, 4, 5
 + - Compatibility		 : Pre-Hyper-Text-Post-Processor 	   :: Version Numbers: 5, 7, 8
 + - Compatibility		 : Zend Engine				   :: Version Numbers: 3, 4
 + - Official Release Date	 : Wednesday, January 31st of 2024
 + ----------------------------------------------------------------------------------------------------------
 + -------------------------------------------------------------------------------	 - Nyx -
 + --[][]--[][][]--[][][]--[][][]---[][][]--[][][]--[]--[]------[][][]------------   []++++||=======>
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]----------------
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]----------------    |'-._/\_.-'|
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]----------------    |    []    |
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]----------------    |___-[]-___|
 + -[]-----[][][]--[][][]--[][][]---[][][]--[][][]--[]--[]------[]----------------    |__((**))__|
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]----------------    \   -[]-   /
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]------------/-\-     \   []   /
 + -[]-----[]------[]--[]--[]---[]--[]------[]--[]--[]--[]------[]---VERSION--|4|-	\  []  /
 + --[][]--[][][]--[]--[]--[][][]---[][][]--[]--[]--[][][]--[][][]------------\-/-	 '.[].'
 + -------------------------------------------------------------------------------
 + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Build Number: 0.8 - Final
 + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Edit Number : 4,325
 ============================================================================================================
*/

/*
 ============================================================================================================
 +
 +
 +
 + [ ^ ] Application Module :: Member :: Login
 +
 +
 +
 ============================================================================================================
*/

/*
 ============================================================================================================
 + Application Module Header
 ============================================================================================================
*/

											echo ($_Application_Module_Member_Message_Login_Header);
											
/*
 ============================================================================================================
 + IF: Check For Valid Member Account Credential Data In Browser Cookies
 ============================================================================================================
*/

if ($_GLOBAL_COOKIE_MEMBER_USERNAME && $_GLOBAL_COOKIE_MEMBER_PASSWORD != null) {

											echo ($_Application_Module_Member_Message_Login_CREDENTIALS_SET);

} else {

/*
 ============================================================================================================
 +
 + Application Module :: Member :: Login :: Variables
 +
 ============================================================================================================
*/

/*
 ============================================================================================================
 + Application Module :: Member :: Login :: Variables :: POST :: Authorization Form
 ============================================================================================================
*/

$_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS			= $_POST['AMM_Login_Authorization_IP_Address_Current'];
$_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS_TOKEN		= $_POST['AMM_Login_Authorization_IP_Token'];
$_Application_Module_Member_Login_POST_AUTHORIZATION_ELECTRONIC_MAIL_ADDRESS			= $_POST['AMM_Login_Authorization_Electronic_Mail_Address'];
$_Application_Module_Member_Login_POST_AUTHORIZATION_USERNAME					= $_POST['AMM_Login_Authorization_UserName'];

/*
 ============================================================================================================
 + Application Module :: Member :: Login :: Variables :: POST :: Authenticated :: Kill Current Authenticated Account
 ============================================================================================================
*/

$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_CURRENT	= $_POST['AMM_Login_Electronic_Mail_Address_Kill_Current'];
$_Application_Module_Member_Login_POST_AUTHENTICATED_PASSWORD_CLEAR_KILL_CURRENT		= $_POST['AMM_Login_Password_Kill_Current'];
$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_CURRENT		= $_POST['AMM_Login_UserName_Kill_Current'];

/*
 ============================================================================================================
 + Application Module :: Member :: Login :: Variables :: POST :: Authenticated :: Kill Current Ghost Account
 ============================================================================================================
*/

$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_GHOST	= $_POST['AMM_Login_Electronic_Mail_Address_Kill_Ghost'];
$_Application_Module_Member_Login_POST_AUTHENTICATED_PASSWORD_CLEAR_KILL_GHOST			= $_POST['AMM_Login_Password_Kill_Ghost'];
$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_GHOST			= $_POST['AMM_Login_UserName_Kill_Ghost'];

/*
 ============================================================================================================
 + Application Module :: Member :: Login :: Variables :: POST :: String Conversion :: String To LowerCase :: All
 ============================================================================================================
*/

$_Application_Module_Member_Login_POST_AUTHORIZATION_ELECTRONIC_MAIL_ADDRESS			= strtolower($_Application_Module_Member_Login_POST_AUTHORIZATION_ELECTRONIC_MAIL_ADDRESS);

$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_CURRENT	= strtolower($_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_CURRENT);
$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_CURRENT		= strtolower($_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_CURRENT);

$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_GHOST	= strtolower($_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_GHOST);
$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_GHOST			= strtolower($_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_KILL_GHOST);

/*
 ============================================================================================================
 + Application Module :: Member :: Login :: Variables :: POST :: String Conversion :: String To UpperCase :: First Character
 ============================================================================================================
*/

$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_CURRENT		= ucfirst($_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_CURRENT);
$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_GHOST			= ucfirst($_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_GHOST);

/*
 ============================================================================================================
 + IF: Internet Protocol Address Authorization Token :: Security and Sanitization Loops
 ============================================================================================================
*/

if ($_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS_TOKEN == "0") {

$_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS_TOKEN		= "Denied";

} // [ + ] IF: Submitted Internet Protocol Address Token IS: 0, Set Variable Value To: Denied

/*
 ============================================================================================================
 +
 + Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: Generator
 +
 ============================================================================================================
*/

/*
 ============================================================================================================
 +  Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: Variables
 ============================================================================================================
*/

$_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER		= 128;

/*
 ============================================================================================================
 +  Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: Random Character Generation Function
 ============================================================================================================
*/

function getRandomStringLogin($_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER) {

/*
 ============================================================================================================
 +  Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: Random Character Generation Function :: Variables
 ============================================================================================================
*/

$_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_CHARACTERS			= '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
$_Application_Module_Member_Login_SECURITY_RANDOM_STRING					= '';

/*
 ============================================================================================================
 +  Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: FOR: Variable < 0 Variable Increment
 ============================================================================================================
*/

for ($_Application_Module_Member_Login_SECURITY_RANDOM_STRING_INVISIBLE = 0; $_Application_Module_Member_Login_SECURITY_RANDOM_STRING_INVISIBLE < $_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER; $_Application_Module_Member_Login_SECURITY_RANDOM_STRING_INVISIBLE++) {

/*
 ============================================================================================================
 +  Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: Randomize Generated Strings
 ============================================================================================================
*/

$_Application_Module_Member_Login_SECURITY_RANDOM_STRING_INDEX					= rand(0, strlen($_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_CHARACTERS) - 1);
$_Application_Module_Member_Login_SECURITY_RANDOM_STRING					.= $_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_CHARACTERS[$_Application_Module_Member_Login_SECURITY_RANDOM_STRING_INDEX];

} // [ + ] Function: Random Character Generator: Increment Invisible String

return $_Application_Module_Member_Login_SECURITY_RANDOM_STRING;

} // [ + ] Function: getRandomStringLogin

/*
 ============================================================================================================
 +  Internal Security :: Login :: Authorization :: Internet Protocol Address Authentication Token :: HASHES
 ============================================================================================================
*/

$_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER_HASH		= hash('sha512',getRandomStringLogin($_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER));

/*
 ============================================================================================================
 +
 + Display :: Input Form :: Registered Member Account :: Login Form
 +
 ============================================================================================================
*/

echo ("
											<FORM ACTION=\"?$_INTERNAL_APPLICATION_MODULE_INTERNAL&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" METHOD=\"post\">
													<I>Member' Account Electronic Mail Address</I>:<BR>
														<INPUT TYPE=\"text\" NAME=\"IAM_Login_Electronic_Mail_Address\" MAXLENGTH=\"50\"><BR>
													<I>Member' Account UserName</I>:<BR>
														<INPUT TYPE=\"text\" NAME=\"IAM_Login_UserName\" MAXLENGTH=\"50\"><BR>
													<I>Member' Account Password</I>:<BR>
														<INPUT TYPE=\"password\" NAME=\"IAM_Login_Password\" MAXLENGTH=\"250\"><BR>
													<INPUT TYPE=\"submit\" VALUE=\"Login\">
												<HR>
											</FORM><BR>

											Additional Options
											<HR>
											Registered Member Account :: Options :: Authentication :: Connection :: Insecure
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"$_ACCESS_URL_CLEARTEXT/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Insecure Over Clear-Text Insecure Connection ::\">Connection :: Insecure :: Clear-Text</A><BR>
											Note: <I>Clear-Text Web Server Connections are non-secure clear-text connections between an electronic device and a web server over Hyper-Text-Transfer-Protocol. <A HREF=\"https://en.Wikipedia.org/wiki/HTTP\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: Hyper-Text-Transfer-Protocol ::\" TARGET=\"_NEW\">Hyper-Text-Transfer-Protocol</A> is an application layer in the <A HREF=\"https://en.Wikipedia.org/wiki/Internet_protocol_suite\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: Internet Protocol Suite ::\" TARGET=\"_TARGET\">Internet Protocol Suite</A>. All Clear-Text connections are not secure and they can easily be read by any server physically placed between your device and the Web Server this Web Application
											is running on.</I><BR><BR>

											Registered Member Account :: Options :: Authentication :: Connection :: Secure :: Secure Socket Layer
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"$_ACCESS_URL_SECURE_SSL_CUSTOM/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Secure Over Secure Socket Layer Encrypted Connection :: SSL :: Custom ::\">Connection :: Secure :: SSL :: Custom</A><BR>
											* <A HREF=\"$_ACCESS_URL_SECURE_SSL/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Secure Over Secure Socket Layer Encrypted Connection :: SSL :: Standard ::\">Connection :: Secure :: SSL :: Standard</A><BR>
											* <A HREF=\"$_ACCESS_URL_SECURE_SSL_OPENSSL/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Secure Over Secure Socket Layer Encrypted Connection :: SSL :: OpenSSL ::\">Connection :: Secure :: SSL :: OpenSSL</A><BR>
											Note: <I>Secure Web Server Connections are secure and encrypted connections between an electronic device and a web server over Hyper-Text-Transfer-Protocol-Secure. <A HREF=\"https://en.Wikipedia.org/wiki/HTTPS\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: Hyper-Text-Transfer-Protocol-Secure ::\" TARGET=\"_NEW\">Hyper-Text-Transfer-Protocol-Secure</A> is an application layer in the Internet Protocol Suite. There are several different kinds of encryption methods that are used in 
											Hyper-Text-Transfer-Protocol-Secure. <A HREF=\"https://en.Wikipedia.org/wiki/Transport_Layer_Security#SSL_1.0,_2.0,_and_3.0\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: Secure Socket Layer ::\" TARGET=\"_NEW\">Secure Socket Layer</A> is an encryption layer that provides encryption programming and encryption mathematics that encrypts the data packets between the device and the web server. There are different versions of Secure Socket Layer. OpenSSL is an open source version of SSL and there are also
											entirely custom written Secure Socket Layer Programming Libraries with custom encryption algorithms based on custom mathematics.</I><BR><BR>

											Registered Member Account :: Options :: Authentication :: Connection :: Secure :: Transport Layer Security
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"$_ACCESS_URL_SECURE_TLS_CUSTOM/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Secure Over Transport Layer Security Encrypted Connection :: Custom ::\">Connection :: Secure :: TLS :: Custom</A><BR>
											* <A HREF=\"$_ACCESS_URL_SECURE_TLS/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Secure Over Transport Layer Security Encrypted Connection :: Standard ::\">Connection :: Secure :: TLS :: Standard</A><BR>
											Note: <I><A HREF=\"https://en.Wikipedia.org/wiki/Transport_Layer_Security\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: Transport Layer Security ::\" TARGET=\"_NEW\">Transport Layer Security</A> are set of Cryptographic Libraries that are used in the Internet Protocol Suite. There are Standard Open Source Cryptographic Libararies and there are also Custom Written Cryptographic Libraries where all of the encryption mathematics are custom written. <A HREF=\"https://en.Wikipedia.org/wiki/Transmission_Control_Protocol\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: Transmission-Control-Protocol ::\" TARGET=\"_NEW\">Transmission-Control-Protocol</A> and <A HREF=\"https://en.Wikipedia.org/wiki/User_Datagram_Protocol\" TITLE=\":: Open & Display :: The Wikipedia Article Entry :: For :: User-Datagram-Protocol ::\" TARGET=\"_NEW\">User-Datagram-Protocol</A> are the Protocols that are usually used in the electronic transmission of data.</I><BR><BR>

											Registered Member Account :: Options :: Authentication :: Connection :: Secure :: Other
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"$_ACCESS_URL_SECURE/$_INTERNAL_FILE_KERNEL?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Hyper-Text-Transfer-Protocol-Secure Over Secure Encrypted Connection :: Other ::\">Connection :: Secure :: Other</A><BR><BR>

											Registered Member Account :: Options :: Authentication :: Account Control
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authenticated&#61;Kill_Account_Current&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Initiate The Kill Currently Authenticated Registered Member Account Options ::\">Registered Member Account :: Account Control :: Authenticated :: Kill Authentication :: Current</A><BR>
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authenticated&#61;Kill_Account_Ghost&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Initiate The Kill Ghost Authenticated Registered Member Account Options ::\">Registered Member Account :: Account Control :: Authenticated :: Kill Authentication :: Ghost</A><BR>
											Note: <I>Did you authenticate into your Registered Member Account on this system and forget to de-authenticate or did you clear the Web Browser Cookies before de-authenticating ? Was your Registered Member Account hijacked ? Use these options to force a de-authentication on your Registered Member Account.</I><BR><BR>
											
											Registered Member Account :: Options :: Authentication :: Authorization
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											<B>Factor :: Internet Protocol Address</B><BR>
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authorization&#61;IP_Address&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Initiate The Internet Protocol Address Authorization Process ::\">Internet Protocol Address :: Authorization :: Token :: Request</A><BR>
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authorization&#61;IP_Token&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Authorize Authentication With The Valid Internet Protocol Address Authorization Token ::\">Internet Protocol Address :: Authorization :: Token :: Input</A><BR>
											Note: <I>Automatic Two-Factor authentication is now enforced on this Web Application. All authentication requires a security token to be sent to the Electronic Mail Address or the Mobile Phone Number on the Registered Member Account.</I><BR><BR>

											Registered Member Account :: Options :: Credentials
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Account_Recovery&amp;Display&#61;Options&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Initiate The Registered Member Account Recovery Options ::\">Registered Member Account :: Recovery</A></CENTER><BR>
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Reset_Password&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Reset Your Registered Member Account Password Or Other Registered Member Account Credentials ::\">Registered Member Account :: Credentials :: Password :: Reset</A><BR>
											Note: <I>Was your Registered Member Account Locked or did you forget the Password ? Use these options to recover your Registered Member Account.</I><BR><BR>

											Registered Member Account :: Registration
											<HR ALIGN=\"LEFT\" WIDTH=\"35%\">
											* <A HREF=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Register&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" TITLE=\":: Initiate The Member Account Registration Process With $_GLOBAL_SYSTEM_SITE_TITLE ::\">Register</A><BR>
											Note: <I>Would you like to Register an Account on this system ? Use these options to Register an Account. The Registration Process requires Registrar Status first and then Account Activation before acquiring a Registered Member Account.</I><BR><BR>
											
											Application Module Note: <I>This Web Application does not use <A HREF=\"https://www.PHP.net/manual/en/book.session.php\" TITLE=\":: Open & Display :: The Official Pre-Hyper-Text-Post-Processor Entry :: For :: Session Programming ::\" TARGET=\"_NEW\">Session Programming</A>. Instead, it uses three unique Cookies for its Authentication System. The Cookies are impossible to clone and tamper whereas all Sessions in Session Programming across all Programming Languages can be cloned and hijacked due to several inherent Security Flaws. If the authentication cookie data issued by this system is ever changed on the device it was issued to the account automatically de-authenticates and is forced to logout.</I><BR><BR>
");

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Status :: Active
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "AccountActive") {

											echo ($_Application_Module_Member_Message_Login_ERROR_ACCOUNT_ACTIVE);

} // [ + ] IF: Internal Application: Display Message: No Existing Member Account Is: Activated

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Credentials :: DO NOT Exist In The Database Management System Server Database
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "NoAccount") {

											echo ($_Application_Module_Member_Message_Login_ERROR_ACCOUNT_DOES_NOT_EXIST);

} // [ + ] IF: Internal Application: Display Message: No Existing Member Account Is: Activated

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Credentials :: DO NOT Exist In The Database Management System Server Database
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "AccountLocked") {

											echo ($_Application_Module_Member_Message_Login_ERROR_ACCOUNT_LOCKED);

} // [ + ] IF: Internal Application: Display Message: Registered Member Account :: Is: Locked

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Authentication Attempt :: Is: Greater Than Allowed
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "AuthenticationAttempt") {

											echo ($_Application_Module_Member_Message_Login_ERROR_ACCOUNT_AUTHENTICATION_ATTEMPT);

} // [ + ] IF: Internal Application: Display Message: Registered Member Account Authentication Attempt :: Is: Greater Than Allowed

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Forced Logout
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "ForcedLogout") {

											echo ($_Application_Module_Member_Message_Login_ACCOUNT_FORCED_LOGOUT);

} // [ + ] IF: Internal Application: Display :: Message: Registered Member Account :: Forced Logout

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Forced Logout :: Web Browser User-Agent String
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "ForcedLogoutUserAgent") {

											echo ($_Application_Module_Member_Message_Login_ACCOUNT_FORCED_LOGOUT_USER_AGENT);

} // [ + ] IF: Internal Application: Display :: Message: Registered Member Account :: Forced Logout :: Web Browser User-Agent String

/*
 ============================================================================================================
 +
 + IF: Registered Member Account :: Forced Logout :: MAC Address
 +
 ============================================================================================================
*/

if ($_GET["Message"] == "ForcedLogoutMACAddress") {

											echo ($_Application_Module_Member_Message_Login_ACCOUNT_FORCED_LOGOUT_MAC_ADDRESS);

} // [ + ] IF: Internal Application: Display :: Message: Registered Member Account :: Forced Logout :: MAC Address

/*
 ============================================================================================================
 +
 + IF: Internal Application :: Authorization :: Internet Protocol Address
 +
 ============================================================================================================
*/

if ($_GET["Authorization"] == "IP_Address") {

if (!$_Application_Module_Member_Login_POST_AUTHORIZATION_ELECTRONIC_MAIL_ADDRESS) {

echo ("
											Registered Member Account :: Authentication :: Internet Protocol Address Authorization<HR>
											The Internet Protocol Address That You Are Attempting To Authenticate From Is Not Authorized<BR>
											Would you like to authorize this Internet Protocol Address ?
											<FORM ACTION=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authorization&#61;IP_Address&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" METHOD=\"post\">
													Your Current Internet Protocol Address Is: <A HREF=\"$_SYSTEM_SERVER_NETWORKING_RESOLVER_WHOIS/$_GLOBAL_REMOTE_SERVER_ADDRESS\" TITLE=\":: Open & Display The Who-Is Information For This Internet Protocol Address ::\" TARGET=\"_NEW\">$_GLOBAL_REMOTE_SERVER_ADDRESS</A><BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_Authorization_IP_Address_Current\" MAXLENGTH=\"40\" VALUE=\"$_GLOBAL_REMOTE_SERVER_ADDRESS\"><BR>
													Your Registered Member Account Electronic Mail Address, For This Authorization Request: <A HREF=\"$_SYSTEM_SERVER_NETWORKING_RESOLVER_WHOIS/$_GLOBAL_REMOTE_SERVER_ADDRESS\" TITLE=\":: Open & Display The Who-Is Information For This Internet Protocol Address ::\" TARGET=\"_NEW\">$_GLOBAL_REMOTE_SERVER_ADDRESS</A><BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_Authorization_Electronic_Mail_Address\" MAXLENGTH=\"100\" VALUE=\"Electronic Mail Address...\"><BR>
													Your Registered Member Account UserName:<BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_Authorization_UserName\" MAXLENGTH=\"20\" VALUE=\"UserName...\"><BR>
													<INPUT TYPE=\"submit\" VALUE=\"Request Authorization\">
												<HR>
											</FORM>
");

} else {

/*
 ============================================================================================================
 + Retrieve Registered Member Account Details From Database Server
 ============================================================================================================
*/

$_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE			= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("SELECT * FROM {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members WHERE member_electronic_mail_address='$_Application_Module_Member_Login_POST_AUTHORIZATION_ELECTRONIC_MAIL_ADDRESS' AND member_username='$_Application_Module_Member_Login_POST_AUTHORIZATION_USERNAME'");
$_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_NUMBER_OF_ROWS	= $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE->num_rows;

/*
 ============================================================================================================
 + IF: Submitted Electronic Mail Address Exists In Database Server
 ============================================================================================================
*/

if ($_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_NUMBER_OF_ROWS == "1") {

/*
 ============================================================================================================
 + Retrieve List of Registered Member Account Entries From Database Server
 ============================================================================================================
*/

while ($_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_Fetch_Array = $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE->fetch_array(MYSQLI_BOTH)) {

$_Application_Module_Login_LIST_MEMBER_ID							= $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_Fetch_Array['id'];
$_Application_Module_Login_LIST_MEMBER_USERNAME							= $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_Fetch_Array['member_username'];
$_Application_Module_Login_LIST_MEMBER_ELECTRONIC_MAIL_ADDRESS					= $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_Fetch_Array['member_electronic_mail_address'];
$_Application_Module_Login_LIST_MEMBER_INTERNET_PROTOCOL_ADDRESS_AUTHORIZED			= $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_Fetch_Array['member_ip_address_authorized'];
$_Application_Module_Login_LIST_MEMBER_INTERNET_PROTOCOL_ADDRESS_AUTHORIZATION_TOKEN		= $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE_Fetch_Array['member_ip_address_authorization_token'];

$_Application_Module_Login_DB_Query_UPDATE_MEMBER_ACCOUNT_IP_ADDRESS_AUTHORIZATION_TOKEN	= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("UPDATE {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members SET member_ip_address_authorization_token='$_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER_HASH' WHERE member_username='$_Application_Module_Member_Login_POST_AUTHORIZATION_USERNAME' AND member_electronic_mail_address='$_Application_Module_Login_LIST_MEMBER_ELECTRONIC_MAIL_ADDRESS'");

/*
 ============================================================================================================
 + IF: Internal Application: Authentication :: Authorization :: Token :: Variable HAS Executed
 ============================================================================================================
*/

if ($_Application_Module_Login_DB_Query_UPDATE_MEMBER_ACCOUNT_IP_ADDRESS_AUTHORIZATION_TOKEN) {
/**
 * Do Nothing
**/
} else {
/**
 * Do Nothing
**/
} // [ + ] IF: Database Server Query :: Update :: Registered Member Account :: Authorized :: Internet Protocol Address :: BY :: Authorization Token String

/*
 ============================================================================================================
 + IF: Electronic Mail :: Send :: Authentication :: Authorization :: Request
 ============================================================================================================
*/

if (mail($_Application_Module_Login_LIST_MEMBER_ELECTRONIC_MAIL_ADDRESS,"Authentication Authorization Request From :: $_GLOBAL_SYSTEM_SITE_TITLE","
Dear $_Application_Module_Login_LIST_MEMBER_USERNAME :: $_Application_Module_Login_LIST_MEMBER_ELECTRONIC_MAIL_ADDRESS,
------------------------------------------------------------------
Either you or someone else has attempted to authenticate into your Registered Member Account at: $_GLOBAL_SYSTEM_SITE_TITLE

There are three pieces of information that are required by default in order to successfully authenticate into any Registered Member Account:
* Member Account, UserName
* Member Account, Password
* Member Account, Electronic Mail Address

This Web Application does not display or disclose any Electronic Mail Addresses belonging to any Registered Member Account anywhere on this system.

Your Registered Member Account Password is encrypted within the Database Management System by using several different kinds of encryption algorithms 
combined with multi-layered HASH algorithms and ciphers.

This combination of encryption makes it just about impossible to crack your Registered Member Account Password if in the event an attacker obtains the Encrypted Password String.
If the Internet Protocol Address Two-Factor Authentication feature is enabled in your Registered Member Account Settings it would be nearly impossible for anyone else to authenticate 
into your Registered Member Account even if they have your current Registered Member  Account Clear-Text Password and they are in the exact same location that you are in while using the 
exact same Internet Protocol Address that you are currently authenticated from.

It would only be possible for anyone else to successfully authenticate into your Registered Member Account if they know your Clear-Text Password and also if they have access to your 
Electronic Mail Message Address Account and they are in the exact same location that you are in while using the exact same Internet Protocol Address  that you are using at this exact 
moment in time. Authentication Authorization Security Tokens are only valid for up to 60 minutes and these Tokens are automatically set back to zero after 60 minutes of the 
original issuance timestamp in order to prevent any unauthorized access into your Registered Member Account.

If you would like to Authorize this specific Internet Protocol Address for this Registered Member Account Authentication please copy and paste the Uniform-Resource-Location 
Link shown  below this message and then paste that link into your Web Browser Uniform-Resource-Location Bar:

* $_GLOBAL_LOCAL_SERVER_HTTP_HOST/$_GLOBAL_LOCAL_SERVER_DIRECTORY_FILE_CURRENT?$_INTERNAL_APPLICATION_MODULE_MEMBER=Login&Authorization=IP_Token

Or alternatively you can Highlight, Press On or Click the following Uniform-Resource-Location Link below to open the Authorization Form:

* $_GLOBAL_LOCAL_SERVER_HTTP_HOST/$_GLOBAL_LOCAL_SERVER_DIRECTORY_FILE_CURRENT?$_INTERNAL_APPLICATION_MODULE_MEMBER=Login&Authorization=IP_Token

Keep the following information for your own records:
* The Internet Protocol Address associated with this Authentication attempt was: $_GLOBAL_REMOTE_SERVER_ADDRESS
* The last Internet Protocol Address on this Member Account that successfully Authenticated was: $_Application_Module_Login_LIST_MEMBER_INTERNET_PROTOCOL_ADDRESS_LAST_LOGIN
* The current Authorized Internet Protocol Address on this Member Account is: $_Application_Module_Login_LIST_MEMBER_INTERNET_PROTOCOL_ADDRESS_AUTHORIZED
* The previoius Authorization Token was: $_Application_Module_Login_LIST_MEMBER_INTERNET_PROTOCOL_ADDRESS_AUTHORIZATION_TOKEN
* The Authorization Token available now is: $_Application_Module_Member_Login_SECURITY_RANDOM_STRING_GENERATOR_LENGTH_NUMBER_HASH
* This Electronic Mail Message Timestamp From The Local Server Was: $_GLOBAL_LOCAL_SERVER_DATE_STANDARD
* This Electronic Mail Message Timestamp From The Remote Server Was: $_GLOBAL_REMOTE_SERVER_DATE_STANDARD
* This Electronic Mail Message Unique Digital Fingerprint Is: $_GLOBAL_SECURITY_RANDOM_NUMBER_GENERATOR_URL_DIGITS_HASH_OF_SHA1_OF_SHA256
------------------------------------------------------------------
Have a nice day,
		~ $_GLOBAL_SYSTEM_SITE_TITLE

")) {

											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_ELECTRONIC_MAIL_MESSAGE_SUCCESS);

} else {

											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_ELECTRONIC_MAIL_MESSAGE_ERROR);

} // [ + ] IF: Electronic Mail Message Has Sent

} // [ + ] WHILE: Retrieving :: Registered Member Account :: Data :: From :: The Database Management System Server Database

} else {

											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_MEMBER_ACCOUNT_NON_EXISTING);

} // [ + ] IF: Submitted Electronic Mail Address Exists In The Database Management System Server Database

/*
 ============================================================================================================
 + Kill Database Server Query: Check For Valid and Existing Registered Member Account Credentials Data
 ============================================================================================================
*/

// [ C ] $_Application_Module_Login_DB_Query_SELECT_MEMBERS_FOR_AUTHORIZATION_UPDATE->free_result();

} // [ + ] IF: Authorization Form Variables Have Executed

} // [ + ] IF: Internal Application: Authorization :: Is: IP_Address

/*
 ============================================================================================================
 +
 + IF: Internal Application :: Authorization From Internet Protocol Address Token
 +
 ============================================================================================================
*/

if ($_GET["Authorization"] == "IP_Token") {

if (!$_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS_TOKEN) {

echo ("
											Registered Member Account :: Authentication :: Internet Protocol Address Authorization Token<HR>
											<FORM ACTION=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authorization&#61;IP_Token&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" METHOD=\"post\">
											Do You Have A Valid Internet Protocol Address Authorization Token ?<BR>
											Your current Internet Protocol Address is: <A HREF=\"$_SYSTEM_SERVER_NETWORKING_RESOLVER_WHOIS/$_GLOBAL_REMOTE_SERVER_ADDRESS\" TITLE=\":: Open & Display The Who-Is Information For This Internet Protocol Address ::\" TARGET=\"_NEW\">$_GLOBAL_REMOTE_SERVER_ADDRESS</A><BR>
														<TEXTAREA ROWS=\"15\" COLS=\"75\" MAXLENGTH=\"512\" NAME=\"AMM_Login_Authorization_IP_Token\">Authorization Token...</TEXTAREA><BR>
													<INPUT TYPE=\"submit\" VALUE=\"Authorize Request\">
												<HR>
											</FORM>
");

} else {

/*
 ============================================================================================================
 + Update :: Registered Member Account :: Details :: In The Database Server :: With Authorization Token
 ============================================================================================================
*/

$_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHORIZATION_TOKEN				= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("SELECT * FROM {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members WHERE member_ip_address_authorization_token='$_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS_TOKEN'");
$_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHORIZATION_TOKEN				= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("UPDATE {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members SET member_ip_address_authorized='$_GLOBAL_REMOTE_SERVER_ADDRESS',member_ip_address_authorized_multifactor='$_GLOBAL_REMOTE_SERVER_ADDRESS',member_account_device_mac_address_authorized='$_GLOBAL_REMOTE_DEVICE_MAC_ADDRESS',member_account_device_web_browser_authorized='$_GLOBAL_REMOTE_SERVER_HTTP_USER_AGENT_DISPLAY',member_security_setting_flag_force_logout='0' WHERE member_ip_address_authorization_token='$_Application_Module_Member_Login_POST_AUTHORIZATION_INTERNET_PROTOCOL_ADDRESS_TOKEN'");
$_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHORIZATION_TOKEN_NUMBER_OF_ROWS		= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHORIZATION_TOKEN->num_rows;

/*
 ============================================================================================================
 + IF: Database Query: Update :: Registered Member Account :: Internet Protocol Address :: Authorization BY Authorization Token
 ============================================================================================================
*/

if ($_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHORIZATION_TOKEN_NUMBER_OF_ROWS == "1") {

											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_TOKEN_VALID);

/*
 ============================================================================================================
 + IF: Database Query: Update :: Registered Member Account :: Internet Protocol Address :: Authorization BY Authorization Token
 ============================================================================================================
*/

if ($_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHORIZATION_TOKEN) {

											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_UPDATED_SUCCESSFULLY);

} else {
											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_UPDATE_ERROR);


} // [ + ] IF: Database Sever Query: Update Authorized Internet Protocol Address By Valid Authorization Token Variable Has Executed

} else {

											echo ($_Application_Module_Member_Message_Login_AUTHORIZATION_TOKEN_INVALID);

} // [ + ] IF: Check Database Server For Valid Internet Protocol Address Authorization Token Variable Has Executed

/*
 ============================================================================================================
 + Kill: Database Server Query: Update Registered Member Account Internet Protocol Address Authorization Token
 ============================================================================================================
*/

// [ C ] $_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHORIZATION_TOKEN->free_result();

/*
 ============================================================================================================
 + Kill: Database Server Query: Check For Valid Registered Member Account Internet Protocol Address Authorization Token
 ============================================================================================================
*/

// [ C ] $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHORIZATION_TOKEN->free_result();

} // [ + ] IF: Registered Member Account :: Authorization Token :: Input Form Variables Have Executed

} // [ + ] IF: Internal Application: Authorization :: IS :: Internet Protocol Address Token

/*
 ============================================================================================================
 +
 + IF: Internal Application :: Authenticated :: Kill :: Current Authenticated Account
 +
 ============================================================================================================
*/

if ($_GET["Authenticated"] == "Kill_Account_Current") {

/*
 ============================================================================================================
 + IF: Internal Application :: Authenticated :: Kill :: Current Authenticated Account :: Input Form Variable HAS NOT Executed, Display Input Form
 ============================================================================================================
*/

if (!$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_CURRENT) {

echo ("
											Registered Member Account :: Authentication :: Authenticated :: Kill :: Account :: Current<HR>
											<FORM ACTION=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authenticated&#61;Kill_Account_Current&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" METHOD=\"post\">
													<I>Member' Account Electronic Mail Address</I>:<BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_Electronic_Mail_Address_Kill_Current\" MAXLENGTH=\"50\"><BR>
													<I>Member' Account UserName</I>:<BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_UserName_Kill_Current\" MAXLENGTH=\"50\"><BR>
													<I>Member' Account Password</I>:<BR>
														<INPUT TYPE=\"password\" NAME=\"AMM_Login_Password_Kill_Current\" MAXLENGTH=\"250\"><BR>
													<INPUT TYPE=\"submit\" VALUE=\"Login\">
												<HR>
											</FORM><BR>
");

} else {

$_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT				= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("SELECT * FROM {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members WHERE member_electronic_mail_address='$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_CURRENT' AND member_username='$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_CURRENT'");

$_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT_Fetch_Array		= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT->fetch_array(MYSQLI_BOTH);
$_Application_Module_Login_LIST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_KILL_CURRENT				= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT_Fetch_Array['member_electronic_mail_address'];
$_Application_Module_Login_LIST_AUTHENTICATED_USERNAME_KILL_CURRENT						= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT_Fetch_Array['member_username'];
$_Application_Module_Login_LIST_AUTHENTICATED_PASSWORD_KILL_CURRENT						= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT_Fetch_Array['member_password'];

/*
 ============================================================================================================
 + IF: Password Verify: Input :: Password VERSUS Registered Member Account :: Password
 ============================================================================================================
*/

if (password_verify($_Application_Module_Member_Login_POST_AUTHENTICATED_PASSWORD_CLEAR_KILL_CURRENT, $_Application_Module_Login_LIST_AUTHENTICATED_PASSWORD_KILL_CURRENT)) {

$_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT				= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("UPDATE {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members SET member_status_account_active='0',member_security_setting_flag_force_logout='1' WHERE member_electronic_mail_address='$_Application_Module_Login_LIST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_KILL_CURRENT' AND member_username='$_Application_Module_Login_LIST_AUTHENTICATED_USERNAME_KILL_CURRENT'");

/*
 ============================================================================================================
 + IF: Database Server Query :: Update :: Registered Member Account :: Status AND Force Logout Flag :: Variable HAS Executed
 ============================================================================================================
*/

if ($_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHENTICATED_KILL_ACCOUNT_CURRENT) {

echo ($_Application_Module_Member_Message_Login_ACCOUNT_AUTHENTICATED_KILL_ACCOUNT_CURRENT_SUCCESSFUL);

} else {

echo ($_Application_Module_Member_Message_Login_ACCOUNT_AUTHENTICATED_KILL_ACCOUNT_CURRENT_ERROR);

} // [ + ] IF: Internal Application :: Authenticated :: Account :: Kill Current :: SQL Query :: Variable :: HAS Executed

} // [ + ] IF: Password Verify: Input :: Password VERSUS Registered Member Account :: Password

} // [ + ] IF: Internal Application :: Authenticated :: Kill :: Current Authenticated Account :: Input Form Variables :: HAVE OR HAVE NOT Executed

} // [ + ] IF: Internal Application :: Authenticated :: Kill :: Current Authenticated Account :: Is: Activated

/*
 ============================================================================================================
 +
 + IF: Internal Application :: Authenticated :: Kill :: Ghost Account
 +
 ============================================================================================================
*/

if ($_GET["Authenticated"] == "Kill_Account_Ghost") {

/*
 ============================================================================================================
 + IF: Internal Application :: Authenticated :: Kill :: Current Ghost Account :: Input Form Variable HAS NOT Executed, Display Input Form
 ============================================================================================================
*/

if (!$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_GHOST) {

echo ("
											Registered Member Account :: Authentication :: Authenticated :: Kill :: Account :: Ghost<HR>
											<FORM ACTION=\"?$_INTERNAL_APPLICATION_MODULE_MEMBER&#61;Login&amp;Authenticated&#61;Kill_Account_Ghost&amp;$_GLOBAL_SYSTEM_SECURITY_CACHE_CIRCUMVENTION_HTR_RANDOM_STRING_GENERATION\" METHOD=\"post\">
													<I>Member' Account Electronic Mail Address</I>:<BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_Electronic_Mail_Address_Kill_Ghost\" MAXLENGTH=\"50\"><BR>
													<I>Member' Account UserName</I>:<BR>
														<INPUT TYPE=\"text\" NAME=\"AMM_Login_UserName_Kill_Ghost\" MAXLENGTH=\"50\"><BR>
													<I>Member' Account Password</I>:<BR>
														<INPUT TYPE=\"password\" NAME=\"AMM_Login_Password_Kill_Ghost\" MAXLENGTH=\"250\"><BR>
													<INPUT TYPE=\"submit\" VALUE=\"Login\">
												<HR>
											</FORM><BR>
");

} else {

$_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST				= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("SELECT * FROM {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members WHERE member_electronic_mail_address='$_Application_Module_Member_Login_POST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_CLEAR_KILL_GHOST' AND member_username='$_Application_Module_Member_Login_POST_AUTHENTICATED_USERNAME_CLEAR_KILL_GHOST'");

$_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST_Fetch_Array	= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST->fetch_array(MYSQLI_BOTH);
$_Application_Module_Login_LIST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_KILL_GHOST				= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST_Fetch_Array['member_electronic_mail_address'];
$_Application_Module_Login_LIST_AUTHENTICATED_USERNAME_KILL_GHOST								= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST_Fetch_Array['member_username'];
$_Application_Module_Login_LIST_AUTHENTICATED_PASSWORD_KILL_GHOST								= $_Application_Module_Login_DB_Query_SELECT_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST_Fetch_Array['member_password'];

/*
 ============================================================================================================
 + IF: Password Verify: Input :: Password VERSUS Registered Member Account :: Password
 ============================================================================================================
*/

if (password_verify($_Application_Module_Member_Login_POST_AUTHENTICATED_PASSWORD_CLEAR_KILL_GHOST, $_Application_Module_Login_LIST_AUTHENTICATED_PASSWORD_KILL_GHOST)) {

$_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST				= $_GLOBAL_DATABASE_MANAGEMENT_SYSTEM_SERVER_DATABASE_CONNECTION->query("UPDATE {$_ACCESS_DATABASE_SERVER_DATABASE_TABLE_PREFIX}_members SET member_status_account_active='0',member_security_setting_flag_force_logout='1' WHERE member_electronic_mail_address='$_Application_Module_Login_LIST_AUTHENTICATED_ELECTRONIC_MAIL_ADDRESS_KILL_GHOST' AND member_username='$_Application_Module_Login_LIST_AUTHENTICATED_USERNAME_KILL_GHOST'");

/*
 ============================================================================================================
 + IF: Database Server Query :: Update :: Registered Member Account :: Active Status AND Force Logout Flag :: Variable HAS Executed
 ============================================================================================================
*/

if ($_Application_Module_Login_DB_Query_UPDATE_MEMBER_AUTHENTICATED_KILL_ACCOUNT_GHOST) {

echo ($_Application_Module_Member_Message_Login_ACCOUNT_AUTHENTICATED_KILL_ACCOUNT_GHOST_SUCCESSFUL);

} else {

echo ($_Application_Module_Member_Message_Login_ACCOUNT_AUTHENTICATED_KILL_ACCOUNT_GHOST_ERROR);

} // [ + ] IF: Internal Application :: Authenticated :: Account :: Kill Account Ghost :: SQL Query :: Variable :: HAS Executed

} // [ + ] IF: Password Verify: Input :: Password VERSUS Registered Member Account :: Password

} // [ + ] IF: Internal Application :: Authenticated :: Kill :: Current Ghost Account :: Input Form Variables :: HAVE OR HAVE NOT Executed

} // [ + ] IF: Internal Application :: Authenticated :: Kill :: Ghost Account :: Is: Activated

} // [ + ] IF: Registered Member Account :: Credentials :: Exist AND ARE Valid
?>