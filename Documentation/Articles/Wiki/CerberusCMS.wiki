Cerberus Content Management System, Officially Registered Unix-Name: CerberusCMS and Cerberus-Content-Management-System in year 2000 - 2001 on FreshMeat which became SourceForge and then SlashDot Media.

==Origins==

===Project Pagan-Like Cultural Theme===
Cerberus Content Management System // Cerberus Web Application Framework With Officially Registered Unix Name: 'CerberusCMS' in the year ~2000 - 2001 on http://www.FreshMeat.org which is not to be confused with any other Applications or Web Applications with the name Cerberus. Cerberus Content Management System was custom written in Pre-Hyper-Text-Post-Processor Programming Code over a span of 2 summers in Oildale, California from around the year ~2000 - 2001 and then it was officially registered on http://www.FreshMeat.org.

===The Word Cerberus and Its Origins===
The English word and name Cerberus is an anglicized word derived from the Greek word Kerberos which is the name of the Three-Headed Hound of Hades. Kerberos was the Hound of the Greek God Hades who was responsible for guarding the entrance to the after life in Greek Mythology. The after life in Greek Mythology is also known as Paradise. Hades was also responsible for taking the living and the dead to and from the afterlife for visitation with the dead. Kerberos was the Greek Three-Headed Hound of Hades who was essentially the Demi-God guard Hound of the God Hades who guided and protected the Living and the Dead in the after life in Greek Mythology. The idea behind this software project is that in computer binary: 1 is: on and 0 is: off which can also be likened to 1 is: alive or 0 is: dead. Also the kind
of personal security Kerberos provided to Hades was superb.

===Project Official Forks===
The direct Web Application project fork is named Fenrir Content Management System. The word Fenrir is from Scandinavian Folklore and was supposedly the name of the Demi-God Wolf belonging to the Scandinavian God Loki. Fenrir Content Management System, Rune Content Management System and Runic Content Management System features all Heathen-Like visible theming as well as Heathen-Like Programming Code and Heathen-Themed Programming Code ASCII Art within the Programming Code because of the Scandinavian Northern-Frisian and Western-Frisian Heathen ancestry of its author.
The Official Cerberus Content Managemet System Software Project follows the standard adoption of Greek culture in inherited Western-American Academia where Greek cultural ideas and symbols were adopted and are used today. Greek alphabet letters and Greek cultural things were reentered into Western-American Academia especially Mathematics around the year ~1800 and onward.

===Project Official Alternate Editions===
Each release of CerberusCMS after CerberusCMS - Version Number: 4, Build Number: 0.8, Edit Number: 4,325 comes with alternate editions named FenrirCMS, RuneCMS and RunicCMS for installation where the entire system is themed around Heathen / Germanic Pagan Gods and Goddesses where in these alternate editions there is no mention of Cerberus and instead of Cerberus it is themed with the names of Heathen / Germanic Gods and Goddesses complete with custom Heathen themed graphics and ascii art. Wodan / Odin, Freyja, Heimdallr and others.

===Project Official Additional Applications===
CerberusCMS comes with several additional applications:
* Architect, This is a Pre-Hyper-Text-Post-Processor Web Application that configures and installs CerberusCMS to the Web Server.

* Hephaestus, which is named after the Greek God of architecture. This is a Pre-Hyper-Text-Post-Processor Web Application that builds CerberusCMS from scratch by creating and making the organized directory structure and each of the Application files directly on the Web Server Data Storage Medium itself. This builds a clean and free-of-malware instance of CerberusCMS and all 2,000+ of the project directories and files within ~300 seconds.

* Pre-Installation ToolKit, This is a Pre-Hyper-Text-Post-Processor Web Application that downloads pre-made archive packages of CerberusCMS by methods of GIT, FTP, CURL, BITS and GET from the Web Browser and unpacks the pre-made archive packages of CerberusCMS to the Web Server.

* Charon, which is named after the Ferryman to the afterlife in Greek Mythology. This is a Personal-Computer Compilable C++ Application that builds a clean installation of CerberusCMS to the local server data storage medium.

* Iris, which is named after the Goddess of Messages in Greek Mythology. This is a Google Android Open Source Software Project Application as well as an Apple iOS Swift Application that can be installed to an Android Mobile Phone and an Apple iPhone. It is used to connect to a web server that has CerberusCMS installed on it. It is much like the Twitter / X Application, FaceBook Messenger and FaceBook Application. Smart Glasses can also be connected to the AOSP/Java and iOS/Swift Applications that are installed on the Smart Phone to then send live video from the Smart Glasses to the Registered Member Account Cerberus-Streams.

* Asclepius, which is named after the Goddess of healing. This is a Pre-Hyper-Text-Post-Processor Web Application that performs extensive diagnostics on the installation of CerberusCMS and offers to reinstall any files with permission from the automated Services Root-Administration Account.

===Project Origins===
CerberusCMS was the author's first software project started when the author was 14 years old. This Web Application was originally written and then used as a long distance communications platform through text messaging from the Internet by small groups from ~2000 to 2006. The project was later expanded upon to cater to a small V-TM:R and V-TM:B Personal Computer video game community to host expansion packs and video game mods on a web server for download to that community. This game was mostly played with friends in Oildale, California.

===Use In The Orignal Id Software Quake 3 - Arena Community===
From the years of ~2000 and 2002 this project was used in the Original Quake 3 - Arena Internet Community to host video game modification pack files as well as to facilitate video game clan wars. Quake 3 - Arena allowed for some Internet Network loops where SEGA Dreamcast owners could also play this video game with those playing this video game on a Personal-Computer through the Id Software Quake 3 - Arena Internet servers.

===Use In The Orignal Microsoft XBOX Media Center Community===
Later on from the years of ~2007 - 2009 this project was used in the Original Microsoft XBOX Media Center [[XBMC]] community before the XBMC project was forked to what is now community maintained [[Kodi Media Center]] International and community maintained [[XMBC4XBOX]] United Kingdom. Customized Application Modules were written for this project to give control of the XBMC install and thus the XBOX itself from any web browser remotely, including from the original smart phone lines that were available from the years of ~2006 - 2009 as well as to remotely launch video games, movies and music on the video game console from any web browser in the world including from the original smart phone lines that were available from the years of ~2006 - 2009 such as the Motorola Razr Dual Screen released in 2007, Motorola Droid AOSP 2009, Motorola Razr Smart Phone 2010, Motorola XPRT AOSP 2010, BlackBerry 8890, BlackBerry 9910, BlackBerry 9930 and more. This would
also enable the owner to watch movies and television shows in up to 720P resolution or higher directly from the smart phone from anywhere in the world by Internet by connecting it remotely to the XBOX where that data were stored on the original XBOX Hard Disk Drive. One could also remotely connect to the python chat programs that were installed on the Original Microsoft XBOX from the smart phone or from the remote web browser to communicate through Internet Relay Chat, Skype or other platforms. Python Internet Relay Chat and other Voice and Video Communication Applications in the .XBOX Executable Format were also available.

XBMC made it possible to run a custom Operating System on the original XBOX where when after the owner flashed XBMC Dashboard onto it the owner could then upgrade the internal Hard Disk Drive to a 750 GB ~ 1 TB capacity Hard Disk Drive with all overclocked components. The owner could then install every video game ever made from every video game console starting from the year ~1970 all the way up to the Playstation 1 video game console including all 888 Original Microsoft XBOX video games ever made for it totaling around ~50,000 video games. The ~50,000 unique and organized video games could be downloaded by downloading an unpackable set of split up archives ranging from 900 GB to 1.4 TB and larger.
The super organized directory structure with all of the additional applications, video game console emulators, media players and more took around 48 hours or longer to upload onto the Original Microsoft XBOX Hard Disk Drive by methods of local-area-network file-transfer-protocol or FTP.

The XBMC Dashboard and custom Linux Operating System available for the Orignal Microsoft XBOX from 2008 to 2016 was comparable to some of the highest end commercial media software that is even available today. Custom Application Modules for CerberusCMS were made so that it could remotely control the entire Original Microsoft XBOX so when an owner left the house or the location of the Original Microsoft XBOX they could then login to an instance of CerberusCMS and remotely control the Original Microsoft XBOX itself that is connected to the local network.

From the years of 2006 - 2016 one could buy an original Microsoft XBOX and then upgrade each of the internal components within it such as the CPU to a 1.4 GHz by reball, RAM to 128 MB to 256 MB and sometimes 512MB by reball, Hard Disk Drive to a 750 GB to 1 TB or greater capacity, Ribbon Cables to SATA1 or Ribbon Cables to ~300MHz, Power Supply Unit to regulated OverVoltage and then flash the
firmware on the Original Microsoft XBOX Motherboard / Mainboard to then install a custom Dashboard Media Center called XBMC. XBMC was under constant development by the community. After one installed XBMC from the years of 2006 - 2016 one could then purchase a 40" or greater High End flat screen computer monitor capable of 1080p/i or higher video resolution output and then use a converter box with the 24Karat Gold Plated Component Cables to get 1080p/i video resolution output with high definition optical audio output from the Original Microsoft XBOX. If one had a high quality wired or wireless surround sound system with 5 - 7 speakers and a subwoofer or more than one subwoofer one could also get high defintion audio as well as high definition 3D surround sound audio from the Original Microsoft XBOX. All of the movies, video games and music
could be launched to use the high defintion surround sound audio and high definition 3D surround sound audio.

From ~2006 to 2012 one could then download and watch every film ever made directly from the Orignal Microsoft XBOX itself and sometimes films and television shows came out to different communities in 720p and higher video resolution several months before the films made it into the public cinemas. This setup was better than what some of the highest end electronics were available to the public from the years of ~2006 to 2012.

The Original Microsoft XBOX with all upgraded, overclocked and firmware flashed components could also store extremely high defintion audio soundtracks as well as high defintion 3D audio soundtracks. The owner could download, store and play every music album ever made from around the world as well as listen to radio stations from around the world.

===Use In The Microsoft XBOX 360 Community===
CerberusCMS with custom Application Modules was used in the Microsoft XBOX 360 Modding Community from ~2008 and onward.

===Use In The CyanogenMod Community===
CerberusCMS with custom Application Modules was used in the CyanogenMod Community from ~2010 until it became LineageOS.

===Loss of Development Progress===
Around 2 years of development progress was lost before 2013. Several fake versions of this project were put on display so as to distract certain groups.
The official project is 100% Pure Pre-Hyper-Text-Post-Processor Programming Code.

==Project Versioning Systems==

====Software Project Versioning System====
The Cerberus Content Management System Project versioning system follows a logical pattern of versioning by ascending version number and builds by ascending build number with edit numbers and manual edit numbers.

All official builds are generated from a C++ application named Charon alternately named Freyja where this C++ application takes manually written Pre-Hyper-Text-Post-Processor programming code from the official CerberusCMS GIT repositories and then it generates the organized directory structure to the hard disk drive where it can be further hand typed and manually hand updated. This eliminates the possibilities of malware carryover in case any files are injected with malicious code during the project development process. Some builds follow the same process and are automated by Charon where Charon takes the official directory structure and files and generates a build by parse checking and parse verifying the Pre-Hyper-Text-Post-Processor programming code.

Once an official build number reaches the number: 0100, where the official version has progressed to an acceptable level of development and features an entirely new version of the project is announced and released into public circulation.

Official Software Project Package Releases follow:
CerberusCMS - Version Number: **Number**, Build Number: **Number**, Edit Number: **Number** and Manual Edit: **Number**

Each official release in different packaged forms are accompanied with a Portable-Document-File
documentation file format and a SHA-512 HASH file size for comparison against the official package released.

====Application Module Versioning System====
Each Application Module has a version number where newer and improved Application Modules ascend in number.

====Kernel File Versioning System====
The Kernel File versioning system follows a logical pattern of version numbers by ascending number. Newer and improved Kernel Files ascend in number. The Kernel File Versioning System is in three different parts: The Version Number of the Kernel, The Build Number of the Kernel and the Edit Number of the Kernel. Kernel Files can be added and removed from the Administration Control Panel and from there the Administration can install or remove that Kernel File.

==Project Cycles==

===Project Development Cycles===
The development team may spend several weeks or months brainstorming, custom writing programming code, implementing that new programming code into the official system and also evaluating the system
for places and things that can be improved. Situations are sometimes rehearsed and evaluated so as to write and implement expert programming code into the system.

Adding new features to the system consists of exactly this.

====Project Brainstorming and Rehearsals====
Brainstorming and Rehearsals to develop secure and proven programming code are normally done in real life such as when rehearsals were done before to evaluate the possibilities of session hijacking and account hijacking so as to secure this project from all possibilities of that vulnerability. Examples of this vulnerability would be: if anyone else were watching someone or video record someone type in their electronic mail address, username and password combination for their registered member account from a public area such as from a library or from a university then that person could then authenticate and login to the registered member account of the person they watched type in their electronic mail, username and password combination and from that specific location because it is done from the same Internet Protocol Address as the actual account on the system. Even if the session, cookie authentication programming code restricts authentication to and from that specific Internet Protocol Address or other combined factors it is still possible even today unless there is extremely
redundant programming code in the authentication system to block that possibility.

Nearly every social media services provider in the world is still vulnerable to account hijacking techniques like this where even the entire session string or cookie data can be dumped from the network itself by using TCPDump, WireShark and other network data dumping tools. These tools can be used to download and copy the session strings that the user account is currently authenticated to and then by copying those strings into an entirely different computer the attacker can get into the account and remain logged-in to the account being hacked even if the account device moves from location to location. As of 2023 FaceBook, Twitter, KeyBase and several other social media platforms are vulnerable to these types of account hijacking hacking techniques.

Security rehearsals of every possible situation within scenarios like these turn to evaluation of programming code so as to write secure programming code for this software project web application to prevent these things from being possible in it.

====Project Programming Code Debugging====
Once new features and programming code updates are added there is a debugging process where every part of the system is manually and thoroughly debugged and perfected by the development team.
Once the system is completely perfected and functional the development team then moves to document and hash the finished additions.

====Quality Programming Code====
All programming code is organized in Pre-Ordered Logical and Pre-Oredered Mathematical style. All of the programming code is documented with organized Documentation Panels within the source code that is readable by anyone with no programming knowledge. All of the programming code maintains consistency in style and indentation. All of the project programming code is 100% Pure Pre-Hyper-Text-Post-Processor programming code.

===Project Update Cycles===
System Updates consist of Programming Code Updates, Programming Code Security Updates, Graphics Updates and more.
Officially released versions come with an embedded build number where the build itself takes several weeks or months of quality code implementation and updates to complete from the project developer.
CerberusCMS - Version Number: 4, Build Number: 0.8, Edit Number: 4,325 was manually updated by hand rewrite periodically from the years of ~ January of 2022 to November, 1st of 2023 and is now approximately ~125,000 lines of Pure Pre-Hyper-Text-Post-Processor Programming Code.

===Project Compatibility and Life Cycle===
CerberusCMS - Version Number: 4, Build Number: 0.8, Edit Number: 4,325 was hand updated by manual Programming Code Rewrite periodically from the years of ~ January of 2022 to November of 2023. This specific Version Number, Build Number and Edit Number will work for ~ 10 years on Pre-Hyper-Text-Post-Processor Version Number: 8.
Major programming code updates implemented heavy use of encryption and data sanitization. It was remade for heavy use of riced and crafted Structured-Query-Language queries and concurrent connections numbering in the 100s for shared hosting and 10s of thousands to 100s of thousands with the recommended Dedicated Server Rack Setup with Dedicated and Seperated Servers For Apache, MySQL/MariaDB/Microsoft Database, P.H.P./Zend, Operating System, Cloud/Data Server and other kinds of servers.
With a Server Setup on a rack with 3 or more different dedicated, separated and security hardened S.Q.L. Server, P.H.P. / Apache Server and Data Storage Server the system can support up to ~ 5,000 unique active concurrent user-connections without any lag or latency in response time.

====End-User System Update Cycles====
* The entire system can be updated from the Administration Control Panel where a Services Root Administrator can initiate the update.
* The update process uses different terminal commands from the Web Server itself to download the official updates to a temporary directory in the system and then replaces by logical transaction each Application Module to the new version.
* Kernel updates consist of the same process mentioned before.
* The entire system is modular where each Application Module as well as the Kernel File itself is hashed in the Secure Hash Algorithm, SHA-512 based on the exact file size of the component in bytes.
* The official file Hash Strings are checked against the official Master Server and Master GIT Repository hash strings where then the Master File allows or disallows the installation based on authentic file integrity if the Application Module undergoing installation is an official Application Module.

Since this CMS is so modular the entire system will continue working if any connected part ever breaks. If any connected Application Module that is official ever breaks or if any byte changes in the programming code it is instantly reinstalled from
the official GIT repository upon one reload of any part of the system. This layer of security makes it just about impossible for this CMS to be hacked because it would instantly reinstall the component that changed in HASH integrity.

===Project Release Cycles===

====Official Project Release Cycles====
CerberusCMS comes with a Kernel File, Installation and Maintenance Applications, Organized Directory Structure, High Definition Graphics and around 89 to 100 official and unique Application Modules that are capable of performing daily tasks as well as management of content and data.

===Official Application Modules===

====Services Root Administration-Level Application Modules====
* Accounts
* Commander
* Integrity
* Loops
* Services

* '''Accounts'''
Automated as well as options for managing accounts and account access levels. Automatically deletes unverified and non-activated registered member accounts.

* '''Commander'''
Automated as well as options for managing command interpretations to and from the robot account by Short-Message-Service Message, Instant Messenger and by other means.

* '''Integrity'''
Automated as well as options for managing all of the files in the system. Integrity automatically checks the file hashes of the file sizes of each file on the system that is generated in the Secure-Hash-Algorithm, 256-BIT to the hashes stored
in the Master Database Server Database as well as the Local Database Server Database. Every file in the system is hashed in Secure-Hash-Algorithm, 256-BIT based on the file size of the file itself. These hashes are compared to the ones in the Master Database Server Database upon every execution of the kernel file.
If 1 byte changes in any of the files in the system this means the file has been tampered with and Integrity will automatically Re-Install the file back to the original one officially released in that version number by executing the programming code block within the Commander Application Module and this process involves unlinking each file and replacing it with a 1M, 5MB, 10MB and 20MB File with Zero Blocks after this the file is flashed back from either the Read-Only Backup Directory or from the Official GIT Repository itself. Re-Installation is also possible through Linux GIT Clone Command, Microsoft Windows BITS Download Command, P.H.P. Copy(); Function Command, P.H.P. File_Put_Contents(); Function Command of the original file hosted on the official GIT repository whether the Global
variables are set to GITHub, GITLab, BITBucket or another GIT-Like Repository web server. This process makes it impossible to hack anything on the system because if even 1 byte changes in the integrity of the file itself the file is automatically Re-Installed back to OEM within a split second. This leaves no time for hackers to exploit the system.

* '''Loops'''
Automated as options for managing data. Automation constantly reorganizes all of the data in the database server.

* '''Services'''
Automated as well as options for managing background services and scheduling specific tasks similar to [[ChronJobs]] commands in Linux.

4 Services Root Administration-Level Application Modules

====Root Administration-Level Application Modules====
* '''Tasks'''
Options for managing current and future tasks as well as an advanced Task Manager that monitors T.C.P./I.P. connections in real-time.

1 Root Administration-Level Application Module

====Administration-Level Application Modules====
* '''Accounts'''
Options for managing current Registered Member Accounts, Sending System Messages to current Registered Member Accounts.

* '''Applications'''
Options for managing all Applications, Application Modules and Application Panels.

* '''Archive'''
Options for managing System Archives. Create, Delete and Restore System Archives.

* '''Control_Panel'''
Options for selection of Administration Applications.

* '''Emulators'''
Options for managing the Video Games and Video Game Console Emulators on the system.

* '''File_Categories'''
Options for managing File Download Categories.

* '''File_Manager'''
Options for managing Files and Data on the system.

* '''Forum'''
Options for managing the Forum, Forum Topics and Forum Topic Messages.

* '''GIT'''
Options for Sending, Receiving and Executing GIT-Like Commands on the system.

* '''Messenger'''
Options for managing the Instant Messenger, Messenger Chat Rooms and Messenger Data.

* '''Server_Information'''
Options and Information about the Web Server and the CerberusCMS Installation.

* '''Panels'''
Options for managing the Application Panels.

* '''Publish'''
Options for managing Publications on the system such as News Article Entries, Article Entries and Sending Mass Newsletters to all Registered Member Accounts.

* '''Ranks'''
Options for managing the Ranking System.

* '''Referrers'''
Options for managing the Referrer Log System.

* '''Robot_Monitor'''
Options for managing Non-Activated and Non-Verified Registrar Member Accounts.

* '''Settings'''
Options for managing the System-Wide Settings.

* '''Submissions'''
Options for reviewing and publishing text and News Article Entry Submissions.

* '''Task_Manager'''
Options for managing Tasks on the System.

* '''Terminal'''
Options for Sending, Receiving and Executing Terminal Commands on the System.

* '''Update'''
Options for managing and updating all Entries on the System such as News Article Entries, Article Entries, Comments, Files and more.

* '''Web_Pages'''
Options for managing Custom Web Page Entries, Custom Web Page Entry Data and Application Panel Links.

22 Administration-Level Application Modules

====Registered Member-Level Application Modules====
* '''Active_Members'''
* '''All_News'''
* '''All_Shouts'''
* '''Application_List'''
* '''Articles'''
* '''Calendar'''
* '''Comment'''
* '''Contact_Administrator'''
* '''Control_Panel'''
* '''Clock'''
* '''Documentation'''
* '''Download / Torrent'''
* '''Electronic_Mail'''
* '''Emulators'''
* '''File_Manager'''
* '''Files'''
* '''Forum'''
* '''Forward_Friend'''
* '''Friend'''
* '''Language'''
* '''Legal'''
* '''Lightning_Calculate'''
* '''Links'''
* '''List'''
* '''Login'''
* '''Market'''
* '''Media_Player'''
* '''Member_Directory'''
* '''Messenger'''
* '''News'''
* '''Pages'''
* '''Private_Files'''
* '''Profile'''
* '''Referrers'''
* '''Register'''
* '''Reset_Password'''
* '''Search'''
* '''Statistics'''
* '''Submit_News'''
* '''System_Message'''
* '''Update_Account'''
* '''Update_Password'''
* '''Upload'''
* '''Video_Games'''
* '''Webspace'''
* '''VoIP Phone'''

46 Registered Member-Level Application Modules

====Background-Level Application Modules====

Activity Logging
* '''Internal_Loops'''
* '''Log_Administration'''
* '''Log_Background'''
* '''Log_Member'''
* '''Log_Visitor'''

5 Background Application-Modules

====Panel Application Modules====
* '''Administration.panel'''
* '''Applications_Panel.panel'''
* '''Banned_Networks.panel'''
* '''Language.panel'''
* '''Latest_Articles.panel'''
* '''Latest_Files.panel'''
* '''Latest_Members.panel'''
* '''Latest_Shouts.panel'''
* '''Member_Panel.panel'''
* '''Project_Badges.panel'''
* '''RSS_Panel.panel'''

11 Application Panels

====Open :: Public Application Modules====
* '''Engine_Validation'''

1 Public-Level Application Module

====Maintenance Applications====
* '''Asclepius, Diagnostics'''
* '''Fides, Integrity'''

2 Maintenance Applications

====Pre-Installation and Pre-Configuration Applications====
* '''Hephaestus'''
* '''Architect'''
* '''SQL_Generator'''
* '''Installation_ToolKit'''

4 Pre-Configuration and Installation Applications.

====Secret Application Modules====
* '''Lightning_Calculate'''
With Version Number: 4, Build Number: 0.8 CerberusCMS comes with a secret Application Module named 'Lightning Calculate !' this Application Module teaches the user how to mentally calculate at lightning speed through repetitive patterns. This Application Module also teaches the user how to master
the Methods of Loci as well as provides a 6 month intensive training course of expert nutrition and physical and mental training to obtain a Mastery of Mathematics.

The author has mental calculating capabilities as a high-level Lightning Human Calculator capable of 4 Digit * 4 Digit mental multiplication as well as several other kinds of lightning mental calculating capabilities.

The Application Module teaches fundamentally how to Mentally Calculate all Mathematical Arithmetic up to 4 Digit * 4 Digit Numbers as well as Exponents.

1 secret Application Module

====Other Application Modules====
* '''Droid'''

* '''Disk Operating System'''

* CerberusCMS comes with Android and Disk Operating System Emulator Application Modules that successfully emulate Android Applications and Disk Operating System Application Images Directly From
the web browser itself.

* CerberusCMS additionally comes with a Digital Store Front named Market where Administrators can list and sell physical and digital items within item categories and entries. The additional Application Module is capable of securely handling personal credit card, debit card, coupon card and CryptoCurrency transactions. The Store Front Application Module stores encrypted personal information for shipping and receiving items. It also provides and stores printable invoices with tracking numbers, bar codes and QR codes.

* CerberusCMS comes with several HTML5 WebGL and Canvas 3D Video Games that are playable from the Application Module itself by using the computer keyboard or a gamepad. All HTML5 WebGL and Canvas 3D Video Games can be converted for use with CerberusCMS by opening the Video Game Source Programming Code files and rewriting the locations of the .js file extension paths, removing all slash commentation lines as well as by mass replacing each quote character in the Programming Code to then be compatible with the Pre-Hyper-Text-Post-Processor Parser format, being: forward slash and quote.

3 Extra Application Modules

====Plug-In Application Modules====
* '''Camera'''
This Plug-In automatically handles and processes the video feed from the device camera.

* '''Image'''
This Plug-In automatically handles and processes every image file across the system including uploaded image files.

* '''Location'''
This Plug-In gets the exact Global-Positioning-System X, Y and Z Coordinates of the Devices connected to CerberusCMS. Location is capable of getting the Device Global-Positioning-System Coordinates and 9 - 10 Foot Radial Location with Altitude from the Web Browser of the Device by using H.T.M.L. Version 5 Global-Positioning-System Built-In Functionality for Longitude, Latitude and Altitude with 98% accuracy every time down to  9 - 10 feet in radius and 3 feet in altitude of that radius where the altitude is reported in Y units above Sea Level every 1 to 5 seconds. Location is also capable of getting the Device Global-Positioning-System Coordinates Location from the Google Android Device or the Apple iPhone Device through the Device Applications. Location stores the exact Global-Positioning-System Coordinates in X, Y and Z to an organized log file within each Registered Member Account log directory. Location can get the Global-Positioning-System Coordinates of Longitude, Latitude and Altitude by Hyper-Text-Markup-Language Version 5 Built-In Functionality From The Web Browser, Pre-Hyper-Text-Post-Processor Built-In Functionality From The Web Browser, Java From The Web Browser, AOSP/Java From The Google Android Smart Phone, iOS/Swift from the Apple iPhone.

* '''Microphone'''
This Plug-In automatically handles and processes the audio feed from the device microphone.

* '''Notifications'''
This Plug-In automatically handles and processes the notifications system-wide.

* '''WYSIWYG Text-Editor'''
This Plug-In is a very simple WYSIWYG Text Editor that can be included into any form throughout the system by invoking a variable.

* '''Safe-HTML'''
This Plug-In automatically converts Hyper-Text-Markup-Language tags to Hyper-Text-Markup-Language entities from all of the input forms throughout the system. Example of this would be converting: '''< B >''' to '''& lt ;''' before it is inserted into the Database Management System Data. This eliminates any possibility of malicious Hyper-Text-Markup-Language tag injection, JavaScript scripting code injection and Post-Hyper-Text-Pre-Processor programming code injection into the Database Management System. All of the entities are converted back to Hyper-Text-Markup-Language tags after being retrieved from the Database Management System.

* '''Secure-Delete'''
This Plug-In contains Light and Heavy Zero Files. Zero Files are files that are filled with Zero Characters and or Random Characters in a repeating or non-repeating pattern. By overwriting a location on the hard disk drive with the Secure-Delete Zero File or Scramble File where a file was deleted by this Web Application, the Web Server Hard Disk Drive maintains perfect operation and clean file transfer with the Move(); and Copy(); functions. Some Operating System File Systems will not actually unlink and delete files especially on some Microsoft &reg; Windows &copy; Web Server Operating Systems, but with this Plug-In it is possible to get a clean Move(): and Copy(); of files so that the files are actually deleted and replaced with the new version. This Plug-In prevents "File Hanging" as well as assists in the Secure Deleting of Data from the Web Server. This is especially useful if a Registered Member Account uploads any malicious hacked files to their Registered Member Account Data Storage. It is possible to rename files such as executable .exe files in Microsoft Windows Operating System to picture files such as .jpg and then upload that malicious file to the Web Server to get it hacked... this Plug-In assists the system in securely deleting any malicious files as well as any risidual hanging files in the system.

* '''Time'''
This Plug-In automatically handles and processes the Measurement of Date, Time and Time-Zones system-wide.

* '''Watermark'''
This Plug-In automatically handles and processes every file that is uploaded to the system. Audio, Document, Image and Video files are embedded with a Watermark so that
if in the event the file is downloaded by anyone the file can be traced back to the Web Server it was uploaded to. The Watermark is in the form of a QR Code that is
embedded into the file and can be invisible or visible. This prevents malicious actors from downloading Profile Images to use them in duplicated accounts. If a malicious actor
duplicates an account on the system or on some other web server the content that they downloaded from the real profile owner will have an embedded QR code that is invisible
where when looked at everyone will know that the profile is a fake version of the real one. There are several options of QR Codes that can be embedded into the files.

==Project Web Server Software Compatibility==

===Programming Code Parser Engines===
* Pre-Hyper-Text-Post-Processor, Version Number: >= 5.6
* Pre-Hyper-Text-Post-Processor, Version Number: <= 8.2.2

===Containers===
* Cascading-Style-Sheet, Version Number: 3

===Relational Database Management Systems===
* My-Structured-Query-Language Server, Version Number: 8.0.32
* Microsoft Structured-Query-Language Server, Version Number: 2022

===Database Management Systems===
* Mini-Structured-Query-Language Server, Version Number: 4.4

===Web Server Software===
* Apache Web Server, Version Number: 2.4.55
* Microsoft Internet Information Services Web Server, Version Number: 10.0

==Project Installation==
A Fresh configuration and installation of CerberusCMS through Architect can be made in <~ 5 minutes. CerberusCMS installs a backup Administration-Level account with the same password as the installed Administration-Level account as well as a Root Administration-Level bot account named Cerberus and a Services Root-Administration account named Services. The Cerberus bot account can be authenticated and logged into to schedule background tasks and to perform Root Administration-Level and Services Root Administration-Level tasks that an Administration-Level account would not be able to perform. This bot account automatically performs programming code tasks, database management server data organization tasks and more. The bot account can also receive commands from Administration-Level accounts as well as from Text-Message, Electronic Mail Message and from any input form on the system. Tasks could be executing loops that delete all unverified Registered Member Accounts from the database management system and all of the unverified Registered Member Account created data instantly.

'''Member Account Access Levels'''
* Services Root Administration-Level
* Administration-Level
* Moderator-Level
* Registered Member-Level
* Open :: Non-Registered Visitor-Level

===Package Download and Upload===
CerberusCMS packages can be downloaded and uploaded in ~10 different ways
* Through Web File-Transfer-Protocol.
* Through File-Transfer-Protocol.
* Through Secure-File-Transfer-Protocol
* Through Web File Manager.
* Through GIT Terminal Command From Included Installation ToolKit Web Application: ToolKit.
* Through GIT Terminal Command.
* Through Included ToolKit Web Application: Builder.
* Through Mercurial Terminal Command From Included Installation ToolKit Web Application.
* Through CURL Terminal Command.
* Through Microsoft Windows / BSD / GNU / Linux / Apple OS Package.
* Through Microsoft Windows Terminal BITS command.

===Installation===
Once the official CerberusCMS package has been downloaded to the Web Server through any of the previous methods the package
can then be unpacked and CerberusCMS can then be installed through Architect which is an included Web Application for pre-configuring and installing CerberusCMS.

==Project Features==

===Interaction Features===

====Entertainment and Interaction====
* Administration and Registered Members can download data from any torrent network from the CerberusCMS Web Application itself. This includes music albums, movies and video games where the music albums, movies and video games can then be played in the web browser for free or downloaded to the users local computer hard drive or data storage medium. The Video Player Application Module automatically searches for and downloads high definition thumbnail images of box art of the movies downloaded.
* Administration and Registered Members can download and play H.T.M.L. 5 3D video games directly from the Emulators Application Module.
* Administration and Registered Members can use a feature named Cerberus-Streams which is very much like a FaceBook wall or Twitter feed and where other Registered Member Accounts can comment and post Audio, Document, Image and Video files. Content could be anything from interaction voicemail messages, music, PDF files, movies, videos, video communication streams and live videos.
* Administration and Registered Members can watch video streams and listen to audio streams from anywhere on the Internet free of any advertisements through the included Application Modules. This includes YouTube, SoundCloud and more. The Network Filtering system is much like IPTables in Linux where entire lists of advertisement servers can be completely blocked.
* Administration and Registered Members can communicate in different ways with PGP Signed and AES encrypted messages through the Messenger Application Module.
* Digital Rights Management Free.
* Encrypted text message, voice alone and voice + video communications directly from the web browser or the Google Android/Java and Apple iOS/Swift application.

===Data Processing Features===
All Data such as Audio, Document, Image and Video files that pass through the Upload Functions across the system are automatically handled and processed.

* '''Audio'''
All Audio files such as Registered Member Account Audio files that are uploaded are automatically processed and converted to 320KBPS Vorbis MP3 file format if the System Setting for this is turned on.

* '''Document'''
All Document files such as Registered Member Account Document files that are uploaded are automatically processed where Watermarks are added to the Document if the System Setting for this is turned on.

* '''Image'''
All Image files such as Registered Member Account Images being: Profile Images, Image Gallery Images and others are automatically HASHED in the Secure-Hash-Algorithm, 256-BIT and an invisible background layer is added to the base of the image. This is for Image Security so that if an Image is downloaded by another user
and uploaded to their account or a duplicated account of that account the Image displays an embedded QR Code so that everyone knows it is a duplicated image and not the original. When displaying an Image a slightly lower resoultion copy
of the original Image is displayed and not the original Image. No original Images are ever sourced in the Web Application.

* '''Video'''
All Video files such as Registered Member Account Video files that are uploaded are automatically processed where Watermarks are added to the Video if the System Setting for this is turned on.

===Project Control Features===

====Kernel File Control Features====
* Expert Digital Security Programming Code.
* Expert Kernel File Switching With Version Tracking.

====Cache Control Features====
* Expert Data Cache Control Programming Code.
* Output Web-Page Cache-Free Programming Code.
* Unique and Completely Random 512 Character Length URL Addition String.
* Cache-Free Programming Code For Live Data Upon Every Refresh of The Web Page Document.

Cache-Control and Cache Circumvention techniques make it impossible to cache or freeze the Web Page content by a malicious M-I-T-M server such as a malicious server block put in place by the government or another entity to control or freeze the web-page content output. All of the files in the system
such as Audio, Document, Image and Video files have an added randomized 512 Alpha-Numeric string added to the end of it and each set is completely different. The string automatically changes upon every reload of the Web Page Document. This stops
all man-in-the-middle Data Cache Hacking / Data Cache-Poisoning / Data Cache-Deception techniques.

Credit For Security Technique: Payne, United Kingdom - Information Security Expert

====Application Module Control Features====
* Application Module Access Level Controls.
* Application Module Access Restriction Controls where specified Application Modules cannot execute programming code that would compromise the system.
* Location By Global-Positioning-System Coordinates With Altitude, Location By Geographical-Localization-Objects, Location By Internet Protocol Address Controls.
* Device Microphone Access Controls.
* Device Camera Access Controls.

====Internet and Intranet Network Control Features====
* Internet Protocol Address and Internet Protocol Network Range Blocking and Filtering.
* Advertisement Server Blocking and Filtering, With Extensive Lists.

====Internal Language Control Features====
Internal language files allow for instant translation of the output messages to any language. Custom languages can also be made and installed such as Hackish, Binary, Elvish and more. Each output message is invoked throughout the system by variables with an organized prefix name. The entire Master Language File can be updated to display the messages in any language.

The language can be changed at any time to any other language through the Language Application Module. Additional languages can be downloaded and installed from the Administration Control Panel.

===Digital Trust Features===
CerberusCMS is very unique because it allows for anyone to view the source code of all of the Documents, Application Modules and the Master File so named the 'Kernel' directly from the Web Application itself which is loaded into the web browser from the web server that is executing the CerberusCMS Programming Code and at the same time all of the transmitting data and stored information is secure from vulnerabilities and exploitation as well as being information secure because only certain details of information are actually displayed throughout the system.

This establishes trust with the human interacting with it because that human can read through all of the Programming Source Code of the CerberusCMS instance running on that specific web server directly from the web browser itself to ensure that everything is private and secure and that there are no deliberate backdoors or exploit code programmed into the system. This makes it to where anyone can consult an information security programming expert to look at the Web Server running CerberusCMS to guarantee the Programming Source Code is secure. Some automated vulnerability scanners will report a vulnerabiity called 'Source Code Disclosure', but this is not a vulnerability so long as the source code programming is secure. It is possible for any web server in the world to report fraudulent information even with integrity checks if the integrity checks are forged by the individual(s) in control of the Web Server. This is why the architecture design of this project is ingenious because it makes it that much more secure.

All of the data that is stored in the Database Server is encrypted using G.N.U.-Privacy Guard, Pretty-Good-Privacy, BCRYPT, Advanced Encryption Standard - 256, Advanced Encryption Standard - 512 and other algorithms, hashes and cipers deemed secure by the information security community.

It also allows for custom encryption algorithms and ciphers and custom encryption mathematics to be used system-wide so as to secure the storage and transimission of specified data.
This is made for corporate-level security, medium to small business security and academic security so as to securely store the data and information of its users.

CerberusCMS features Master Security Modules where when each module is included by the Master File so named the Kernel the programming code then eliminates all possibility of:
* Malicious S.Q.L. Injection Attacks
* Malicious Cross-Site-Scripting Attacks
* Malicious H.T.M.L. Code Attacks
* Malicious Cookie Injection Attacks
* Malicious Cookie Tampering Attacks
* Large File Upload Attacks
* Unrestricted File Upload Attacks
* Local File Inclusion Attacks
* Remote File Inclusion Attacks
* P.H.P. Buffer Overflows
* P.H.P. Function Overflows and Underruns
and more.

The Master_Sanitization file features expert Pre-Hyper-Text-Post-Processor programming code that sanitizes all REQUEST, GET and POST Data used throughout the input forms system-wide as well as anything used in the Uniform-Resource-Location bar in the web browser.

===Digital Information Security Features===
CerberusCMS aims to be a secure Content Management System and Programming Framewhere and it is hardcoded for information security and data security.

====Vulnerability and Exploitation Security====
* '''Directory Security'''
Automatic Directory Content Listing Denial

* '''Expert Data Sanitization Security'''
Automatic REQUEST, GET and POST Data Sanitization. All Data that passes through the REQUEST, GET and POST Data Variables are Sanitized through the Master_Sanitization Security Module. This includes
any Programming Code, Harmful H.T.M.L. Characters, H.T.M.L. and JavaScript Tags and more.

* '''Expert Variable Sanitization'''

Automatic Variable Data Sanitization. All Variables that are initialized and executed System-Wide are killed upon the ending of the execution with kill();, die(); and exit();. This makes it impossible
to manipulate any of the Variables in any kind of a buffer loop System-Wide. Many other Pre-Hyper-Text-Post-Processor Web Applications will employ the use of the P.H.P. Function: isset();:

 if (isset($Variable)) {
 	do_something();
 }

CerberusCMS expert Programming Code Framework only calls upon declared Variables with values or other functions attached to them and upon calling upon the declared Variable it is instantly killed
after its completed task. This leaves no room for any Variable Data manipulation by a malicious hacker and this process instantly frees up all of the commit resources of the C.P.U. and the R.A.M. in
the Web Server.

 $Variable = copy("./File.txt", "./NewFile.txt");

 if ($Variable) {

 	echo ("Message: File has been copied.");

 } else {

 	echo ("Message: Error: File has not been copied. Try Again ?");

 }

 kill($Variable); OR die(); OR exit();

There are approximately ~3,000 Unique Variables in Cerberus Content Management System' Source Programming Code and every Variable is Uniquely named respective of the system.

Computer Programming Information Security Technique Credit: MathSaurus, Netherlands

* '''Image Security'''
All Image files uploaded are automatically HASHED in the Secure-Hash-Algorithm, 256-BIT and Integrity has an extensive Programming Code Loop that constantly checks all Registered Member Account
Images for duplicates based on File Size Integrity. Integrity will automatically delete duplicated Profile Pictures across all Registered Member Accounts when it finds them. This is to prevent
duplicated Registered Member Accounts where a malicious user could download the Profile Pictures of a Registered Member Account and then create a duplicated Profile by Registering an Account
with the same name but with a different Electronic Mail Address and then by uploading the downloaded Profile Pictures. Integrity will automatically scan for this and alert the Administration Team
on the system where an Administrator can then delete the duplicated Accounts and Network Ban the malicious user's Internet Protocol Address or Internet Protocol Address Range.

* '''Account Uniqueness Security'''
All Registered Member Accounts are unique and have an exclusive ID Number and Randomized String that is never the same as any other Registered Member Account. Only 1 Electronic Mail Address
can be used to Register an Account on the system and the Account requires Administration approval to change the Electronic Mail Address. Upon Registration and Activation the Electronic Mail Address
is added to the physical Master List within the Electronic Mail Address repository in the system. Once this is added it can never be used to Register an Account again.

* '''Structured-Query-Language Statement Security'''
All Structured-Query-Language Statements are Objectized into Object-Oriented-Like Statements from the Structured-Query-Language Class Files. When installing CerberusCMS to the Web Server
the Architect can choose between the different Structured-Query-Language Class Files to be used. This determines what Database Management System Server will be used. MariaDB, MySQL, MicrosoftSQL and others
are currently supported so long as the Class File contains the correct Object to Function Programming Code. For MySQL there are currently 2 different drivers that are supported: MySQL and MySQL Improved. All Structured-Query-Language Statements are attached to a Variable and then later called upon in the Programming Code.

 $Variable = $DB->Query("SELECT id FROM {$_Prefix}_News DESC");

 if ($Variable) {

 	echo ("Message: The MySQL Improved Statement: $Variable :: Executed Successfully.");

 } else {

 	echo ("Message: Error: The MySQL Improved Statement: $Variable :: Did Not Executed. Try Again ?");

 }

 $DB->Kill($Variable);

This process eliminates any possibility of Structured-Query-Language Tampering or Injection because all of the S.Q.L. Statements are prepared and these prepared statements are within a Uniquely Named Variable. This is different from
using Object-Oriented Prepared Statements with the built-in P.H.P. PDO Functions and Classes :: PDO Driver which is actually still vulnerable to S.Q.L. Injection Techniques as of the year 2023.

'''https://www.php.net/manual/en/class.pdo.php'''

CerberusCMS uses a custom written Database Management System Server Database Class File where the driver functions and statements are converted into quickly usable variables in an Object-Oriented Style.
$DB->Query is the same as mysql_query(); or mysqli_query(); -- This is superior to PDO Statements because each S.Q.L. Statement is prepared and sits inside of an unchanging Variable Name and thus the statement can never be manipulated anywhere else on the system.
The Structured-Query-Language Statement and Database Management System Server Connection is instantly killed after its completion. This make it impossible to achieve an S.Q.L. Injection so long as the statement does not contain $_REQUEST[''];, $_POST['']; and $_GET[''];
Data and none of the statements on the system do.

'''Injections'''
* Structured-Query-Language Code Injection
* Cookie Injection
* Cross Server Injection
* Mixed Information Injection
* Hyper-Text-Markup-Language Character Injection
* Lightweight Directory Access Protocol Injection
* Programming Code Injection
* Operating System Command Injection
* Arbitrary Code Injection
* Cross Site Scripting

'''Information and Data Tampering'''
* Data Tampering
* Cookie Tampering
* File Swapping
* Internet Protocol Address Tampering
* H.T.T.P. Verb Tampering

'''Programming Code Execution'''
* Remote Code Execution

'''File and Directory Handling'''
* Local File Inclusion
* Remote File Inclusion
* Directory Traversal
* Fake File Extensions
* Large File Upload
* Unrestricted File Upload

'''Buffers'''
* Buffer Overflow
* Buffer Underrun
* Integer Underrun
* Integer Overflow

'''Web Server Origins'''
* Cross Request Forgery
* Cross Site Request Forgery
* Cross Origin Resources

'''Configurations'''
* Security Misconfigurations

'''Extensible Markup Language'''
* XML External Entity Processing
* XML External Entities

'''Password Storage'''
* Password Decryption

'''Data Exfiltration'''
* Data Mining and Exfiltration
* Encapsulation
* Cross U.R.L. Poisoning
* H.T.T.P. Response Splitting

'''Data Storage'''
* Insecure Cryptographic Storage
* Insecure Digest
* Insecure Direct Object Referencing
* Sensitive Data Exposure

'''Denial of Service'''
* Denial of Service Through RAW Connection
* Denial of Service Through Ping
* Denial of Service Through H.T.T.P. Code

===Integrity Features===
* Automatic Kernel and Application Module file size integrity checks on every execution of the web page document.
* Automatic Re-Install of the compromised Kernel File, Application Module and or Component back to OEM. 

If 1 byte changes in the official programming code of the Kernel and or the Application Modules included in the official version that specific component is automatically Re-Installed by Linux GIT Command, Microsoft Windows BITS Command, P.H.P. File_Put_Contents(); Function Command or P.H.P. Copy(); Function Command from the Cerberus Services Root-Administration account which remains active at all times. This makes it impossible to hack the CerberusCMS instance by different programming code injection attacks just incase sanitization of URL and input forms fails at any point in time.

There is a stand-alone integrity Application that checks the CerberusCMS instance integrity of each file and then compares the SHA-256 hashes of each file to
the Master Database Server Database. If the SHA-256 HASHES of the Kernel, Applications Modules and or Components are different than OEM release at any point in time Integrity then provides options to Re-Install the Kernel File and Application Modules by GIT Command, Microsoft Windows BITS Command or P.H.P. File_Put_Contents(); Function Command.

===Data Sanitization Features===
* Automatic Data Sanitization of all input forms, Uniform-Resource-Location Bar Variables, REQUEST, POST and GET Data.

Automatic Data Sanitization makes it impossible to hack the CerberusCMS instance by injection attacks.

===Internal Security Loop Features===
* Automatic Cookie Data Checks.
* Automatic File and Directory Permission Checks.
* Automatic Exploitation Technique Checks and Security.
* Automatic Encryption of Files, Passwords and Sensitive Data.
* Automatic Randomization and Encryption of Registered Member Account File Names.
* Automatic Data Sanitization.
and much more.

===Account Authentication Features===
* Automatic 2-Factor Authentication by SHA-512 Security Token String From Electronic Mail Message or Mobile Phone Text Message.
* Automatic Internet Protocol Address Restricted Authentication.
This makes it impossible for anyone else to login to the account on the same authorized Internet Protocol Address. Only one device can be logged in at a time.

===Encryption Features===
* Pretty-Good-Privacy and Advanced Encryption Standard - 256 Encrypted Electronic Mail Messages.
* Pretty-Good-Privacy Signed Electronic Mail Messages.
* Pretty-Good-Privacy, Advanced Encryption Standard - 256 and Advanced Encryption Standard - 512 Encrypted Instant Messenger.
* Advanced Encryption Standard - 256 and Advanced Encryption Standard - 512 Encrypted Personal Files.

===Activity Monitoring and Logging Features===
* Extensive and Detailed activity monitoring with exact Global-Positioning-System Coordinates With Altitude of Registered Member Accounts and Non-Registered Visitors based on device reporting.
* Unique Digital Fingerprinting.

===Notable Features===
CerberusCMS is capable of playing video game console games by Read-Only-Memory image file through the Emulator Application Module.
Through this Application Module one can play Nintendo, Super Nintendo and other types of video games from the web browser for free.

==Project Details==

===Project Programming Code Size===
Programming Code
CerberusCMS as of Version Number: 4, Build Number: 0.8, Edit Number: 4,325 has approximately ~125,000 lines of Pure Pre-Hyper-Text-Post-Processor programming code.

===Quality Programming Code===
CerberusCMS as of Version Number: 4, Build Number: 0.8, Edit Number: 4,325 features 125,000 lines of quality and thoroughly documented Pre-Hyper-Text-Post-Processor programming code.

===Programming Code Documentation and Searchability===
All of the programming code is extremely documented and manageable with approximately 7,000 panels of programming code documentation. The documentation panels within the source code explain in detail what every line of programming code in the system does. All of the programming code documentation features searchable programming code keys such as:
* [ ^ ], meaning header
* [ @ ], meaning beginning of logical programming code statement with explanation of programming code functionality.
* [ + ], meaning ending of logical programming code statement with explanation of programming code functionality.
and more.

* Example:

 /*
 * [ @ ] IF: 1 IS Greater Than 2, Add 1 To 2
 */

 $A = 1;
 $B = 2;

 if ($A > $B) {

 	$C = $A + $B;

 	echo ($C);

 } // [ + ] IF: 1 IS Greater Than 2, Add 1 To 2

Adding features to this web application as a novice programmer is very simple and straightforward.

The idea behind the CerberusCMS project is for it to remain 100% Pure Pre-Hyper-Text-Post-Processor programming code with digital information security in mind.

===End-User / Unofficial Application Module Development===
End-Users with limited programming knowledge can create their own Application Modules by just a few steps, being:

* 1. By writing the custom Application Module in the style of the Programming Code Framework.
* 2. By adding the output message variables to the language file.
* 3. By adding the POST and GET variables to the Master Sanitization security module.

Application Modules can be written to do just about any computing task that P.H.P. is capable of from the web browser.

===Bundled Software and Packages===
CerberusCMS as of Version Number: 4, Build Number: 0.8 comes with Charon alternately named Freyja which is a compilable C++ application that can be compiled with G.C.C. and other C++ compiling applications from a terminal.

Charon alternately named Freyja was combined from other C++ programming code that generated the theme files necessary to have a custom graphical theme on CerberusCMS.

CerberusCMS also comes with Iris alternately named Hel which is an Android Open Source Software Project application as well as a SWIFT application for Apple iOS.

Charon alternately named Freyja does numerous things such as:
* Generates the clean, malware free organized directory structure of CerberusCMS to the local hard drive and then manually copies and pastes the CerberusCMS Project programming source code from the official GIT Repository to each file. This eliminates any possibility of malware carryover from system to system in case any files are injected with malicious code at any point in time in the development cycle.
* Generates custom CerberusCMS themes.

Iris alternately named Hel does numerous things as well, such as:
* Connects a mobile device that is flashed with Android Open Source Software Project or with Apple iOS to the specified CerberusCMS installation on the specified web server.
* Capable of sending and receiving encrypted messenger messages.
* Capable of browsing the CerberusCMS installation.

[[Charon]] is named after the ferryman of Hades in Greek Mythology who carried the living and the dead back and forth from Hades to Earth. [[Iris]] is named after the Greek Goddess of Messages in Greek Mythology.
[[Hel]] or [[Helvegen]] is a gatekeeper of the afterlife in [[Heathen]] / Germanic-Pagan mythology who is very similar to Charon in Greek Mythology.

==User-Interfaces==

===Programming Code Interface===

===Terminal Interface===
CerberusCMS has a feature where an Administrator can use a terminal on a personal computer or mobile phone to connect to it to issue low-level priviledge operating system commands such as management of specific data
in the system itself where it is connected to the Database Management System or other web server things including Internet of Things Devices.

===Graphical User-Interface===
Unix-Like with Modular appearance.
CerberusCMS comes with a theme pack that contains 4 different quality levels of graphics.
* 8K or 7680 × 4320 or "4320P" Progessive / Interlaced
* 4K or 3840 × 2160 or "2160P" Progressive / Interlaced
* 1440p/i or 2560 x 1440 or "1440P" Progressive / Interlaced
* 1080p/i or 1920 x 1080 or "1080P" Progressive / Interlaced
* 720p/i 1280 x 720 or "720P" Progressive / Interlaced
* 480p/i 640 x 480 or "480P" Proressive / Interlaced
CerberusCMS automatically detects the connection speed of the connection and optimizes the graphics quality to meet the connection speed. For network connection speed at ~ 800 KiloBytes it will choose to load the 1920 x 1080 resolution theme graphics. Faster connection speeds will automatically choose to load the 4K resolution theme graphics. The entire theme system uses percentages in the programming code so that it can be perfectly fit and rendered to any device resolution. Mobile cell phones, Mobile devices, computer monitors, laptops and other devices of different resolutions.

===Internet of Things Interface===
Custom Application Modules can be written to control IoT Devices connected to the system such as Smart House Electricity Usage Monitoring, Smart House Lightning Systems to turn lights on and off, programmable logic controllers, SCADA and more. All of these things can be controlled from an Application Module with buttons and more.

==Programming Code Architecture==
CerberusCMS - Version Number: 4, Build Number: 0.8, Edit Number: 4,325, Manual Edit Number: Final is written in a Linux Operating System Architectural Style where everything is completely modular with HASH checksums on
each file for integrity comparison. The Kernel file can be continually added to by using the consistent Programming Code Framework that has been written by the author.

===Programming Code Consistency and Uniqueness===
The Programming Code Consistency of this Software Project ranges extremely high on all Programming Code Consistency testing. For example: all of the variables used system-wide are specially named with
a prefix string so as to make writing new Programming Code for this Software Project extremely simple and remain extremely unique and extremely consistent.

===Programming Code Features===
The Pre-Hyper-Text-Post-Processor Build In Function: echo(); instead of print(); and print_r(); is extensively used across the system so that the output can be displayed in a Terminal as well as on a Web Page Document Output.

===Programming Code Execution===
* The programming code is executed from top to bottom in a Pre-Order logical and Pre-Order Mathematical process.
* The entire system is executed, exploded and then imploded in a microsecond.
* The system is capable of handling ~500 concurrent connections with ~500 concurrent Database Management Server connections at a time on a ~ 1.5 MegaByte Per/Second Bandwith Web Server.
* The entire system including programming code and graphics is ~ 12 MegaBytes.

===Programming Code Statements===
* Simplicity of Object-Oriented-Like Variables and Functions.
* Simplicity of Proceedural Style Programming Code.
* Expert and Unique Variable Prefix Naming System.
* Expert Programming Code Statements.
* Expert Riced Database Server Query Statements.

===Programming Code Searchability===
* Expert Searchable Programming Code Keys.

===Programming Code Documentation===
* ~7,000 Panels of Expert In-Line Programming Code Documentation. Every section of Programming Code in this Software Project is throughly documented and all ending statements are documented with searchable characters. By opening and using the 'Find Keyword' and 'Find Character' functions within the Programming Code editor software one can easily find the beginning and ending of each Programming Code statement by searching for the character combinations of: [ ^ ], [ @ ], [ + ] as well as other character combinations.

===Other Features===
CerberusCMS comes with a feature where each Registered Member Account is allotted an amount of storage data space specified by the Administration. It also has a Messenger
written in Pure Pre-Hyper-Text-Post-Processor programming code that allows for custom encryption, Pretty-Good-Privacy, Advanced Encryption Standard - 512 encrypted and signed messaging as well as sending and receiving cell phone text messages world-wide.

===Software Licensing===
CerberusCMS free and open source edition comes with a custom FOSS license.

==Project Development Team==

===Company Projects===
Tinke Software was renamed from Rune Software and Rune Software, Inc. which was registered in 2001 through ICANN as RuneSoftware.org after an agreement was made over the name with Rune Software, GMBH in Germany. Tinke Software now maintains and periodically develops 23 unique and different software projects that use just about
every programming language and scripting language.

Content Management Systems
* Cerberus Content Management System :: Written In P.H.P.-S.Q.L.
* Cerberus Content Management System, Direct Fork: Fenrir Content Management System :: Written In P.H.P.-S.Q.L.
* Cerberus Content Management System, Direct Fork: Runic / Rune Content Management System :: Written In P.H.P.-S.Q.L.
* Cerberus Content Management System, Direct Fork: Debian Content Management System :: Written In P.H.P.-S.Q.L.
* CerberusCMS, Iris :: Written In Java, C++ and P.H.P.
* CerberusCMS, Magysk Theme Writer :: Written In C++
* CerberusCMS, Stokje Application Writer :: Written In C++
* CerberusCMS, Charon / Helvegen :: Written In C++

Discovery Applications
* Grutte Forces // Troll Unmasker :: Written in Python and C++

Mathematics Applications
* Lightning Calculate ! :: Written In P.H.P. and C++
* G.C.'s Calculator :: Written In P.H.P. and C++

Language Applications
* Runic Alphabets :: For Linux, Google AOSP, Apple iOS and Microsoft Windows
* Runic Calendars :: Written In C++ and P.H.P.
* Runic Keyboard Layouts :: For Linux, Google AOSP, Apple iOS and Microsoft Windows
* Runic Keyboard Stickers :: For Linux, Google AOSP, Apple iOS and Microsoft Windows
* Runic Language Packs :: For Linux, Google AOSP, Apple iOS and Microsoft Windows

Messenger Applications
* Runic / Rune Messenger // Encrypted Messenger Written in P.H.P. and C++

Operating Systems
* Runic / Rune / Sowilo Dashboard // Dashboard Based on the Original XBMC and XBMC4XBOX Project
* Runic / Rune / Sowilo Operating System // Based on Gentoo-Linux and Arch-Linux

Video Games
* Grand Theft Auto - Oildale :: Irrlicht and Unity 3D Video Game
* Grand Theft Auto - Oildale :: GTA - San Andreas Expansion Pack For Personal-Computer and Modded Original XBOX featuring Oildale, California

23 unique and original software projects.

Each software project combined totals around ~450,000 lines of original programming code across several different programming languages and scripting languages.

==Project Copyrights==
Every line of programming code in CerberusCMS up to CerberusCMS, Version Number: 4, Build Number: 0.8, Edit Number: 4,325 is 100% original from and was written by the computer programmer Gary Christopher Johnson of SouthGate, California, West Los Angeles, California and Oildale, California.

This web application was developed and written in Southern California. This project was started in around the year ~2001 when I was about 14 or maybe 15 years old... My girlfriend at the time... a nice laptop was given to me. I started learning computer programming back then. The updates for this specific project is slow because I don't have the time to work on it every day.
